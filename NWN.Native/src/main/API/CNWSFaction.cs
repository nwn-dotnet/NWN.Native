//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public unsafe class CNWSFaction : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CNWSFaction(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CNWSFaction obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CNWSFaction() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CNWSFaction(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public global::System.IntPtr Pointer {
    get {
      return swigCPtr.Handle;
    }
  }

  public static unsafe implicit operator void*(CNWSFaction self) {
    return (void*)self.swigCPtr.Handle;
  }

  public static unsafe CNWSFaction FromPointer(void* pointer, bool memoryOwn = false) {
    return pointer != null ? new CNWSFaction((global::System.IntPtr)pointer, memoryOwn) : null;
  }

  public static CNWSFaction FromPointer(global::System.IntPtr pointer, bool memoryOwn = false) {
    return pointer != global::System.IntPtr.Zero ? new CNWSFaction(pointer, memoryOwn) : null;
  }

  public bool Equals(CNWSFaction other) {
    if (ReferenceEquals(null, other)) {
      return false;
    }

    if (ReferenceEquals(this, other)) {
      return true;
    }

    return Pointer.Equals(other.Pointer);
  }

  public override bool Equals(object obj) {
    return ReferenceEquals(this, obj) || obj is CNWSFaction other && Equals(other);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public static bool operator ==(CNWSFaction left, CNWSFaction right) {
    return Equals(left, right);
  }

  public static bool operator !=(CNWSFaction left, CNWSFaction right) {
    return !Equals(left, right);
  }

  public CExoArrayListUInt32 m_listFactionMembers {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_listFactionMembers_set(swigCPtr, CExoArrayListUInt32.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSFaction_m_listFactionMembers_get(swigCPtr);
      CExoArrayListUInt32 ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoArrayListUInt32(cPtr, false);
      return ret;
    } 
  }

  public int m_nFactionId {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_nFactionId_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CNWSFaction_m_nFactionId_get(swigCPtr);
      return retVal;
    }

  }

  public int m_nParentFactionId {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_nParentFactionId_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CNWSFaction_m_nParentFactionId_get(swigCPtr);
      return retVal;
    }

  }

  public int m_nMemberListArrayIndex {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_nMemberListArrayIndex_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CNWSFaction_m_nMemberListArrayIndex_get(swigCPtr);
      return retVal;
    }

  }

  public CExoString m_sFactionName {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_sFactionName_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSFaction_m_sFactionName_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public int m_bGlobalReaction {
    set {
      NWNXLibPINVOKE.CNWSFaction_m_bGlobalReaction_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CNWSFaction_m_bGlobalReaction_get(swigCPtr);
      return retVal;
    }

  }

  public CNWSFaction() : this(NWNXLibPINVOKE.new_CNWSFaction__SWIG_0(), true) {
  }

  public CNWSFaction(uint oidLeaderID) : this(NWNXLibPINVOKE.new_CNWSFaction__SWIG_1(oidLeaderID), true) {
  }

  public void Initialise() {
    NWNXLibPINVOKE.CNWSFaction_Initialise(swigCPtr);
  }

  public void AddMember(uint oidNewMemberID, int bInPostProcess) {
    NWNXLibPINVOKE.CNWSFaction_AddMember__SWIG_0(swigCPtr, oidNewMemberID, bInPostProcess);
  }

  public void AddMember(uint oidNewMemberID) {
    NWNXLibPINVOKE.CNWSFaction_AddMember__SWIG_1(swigCPtr, oidNewMemberID);
  }

  public void AttemptJoin(uint oidNewMemberID) {
    NWNXLibPINVOKE.CNWSFaction_AttemptJoin(swigCPtr, oidNewMemberID);
  }

  public int AttemptRemove(uint oidRemoveeID, uint oidRemoverID) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_AttemptRemove(swigCPtr, oidRemoveeID, oidRemoverID);
    return retVal;
  }

  public uint GetMemberList(uint** pMemberIDs) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetMemberList(swigCPtr, (global::System.IntPtr)pMemberIDs);
    return retVal;
  }

  public int InviteMember(uint oidNewMemberID, uint oidInviterPlayerID) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_InviteMember(swigCPtr, oidNewMemberID, oidInviterPlayerID);
    return retVal;
  }

  public int GetIsInvited(uint oidCreatureID) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetIsInvited(swigCPtr, oidCreatureID);
    return retVal;
  }

  public void RemoveMember(uint oidMemberID) {
    NWNXLibPINVOKE.CNWSFaction_RemoveMember(swigCPtr, oidMemberID);
  }

  public void ChangeMemberId(uint oidOld, uint oidNew) {
    NWNXLibPINVOKE.CNWSFaction_ChangeMemberId(swigCPtr, oidOld, oidNew);
  }

  public void SendChatMessage(uint oidSpeaker, CExoString sSpeakerMessage) {
    NWNXLibPINVOKE.CNWSFaction_SendChatMessage(swigCPtr, oidSpeaker, CExoString.getCPtr(sSpeakerMessage));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SendFactionUpdateList() {
    NWNXLibPINVOKE.CNWSFaction_SendFactionUpdateList(swigCPtr);
  }

  public void SendFactionUpdateAdd(uint oidAddedMemberID) {
    NWNXLibPINVOKE.CNWSFaction_SendFactionUpdateAdd(swigCPtr, oidAddedMemberID);
  }

  public void SendFactionUpdateRemove(uint oidRemovedMemberID) {
    NWNXLibPINVOKE.CNWSFaction_SendFactionUpdateRemove(swigCPtr, oidRemovedMemberID);
  }

  public uint GetWeakestMember(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetWeakestMember__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetWeakestMember(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetWeakestMember__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public uint GetStrongestMember(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetStrongestMember__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetStrongestMember(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetStrongestMember__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public uint GetMostDamagedMember(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetMostDamagedMember__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetMostDamagedMember(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetMostDamagedMember__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public uint GetLeastDamagedMember(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetLeastDamagedMember__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetLeastDamagedMember(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetLeastDamagedMember__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public int GetGold() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetGold(swigCPtr);
    return retVal;
  }

  public int GetAverageReputation(uint oidSubject) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetAverageReputation(swigCPtr, oidSubject);
    return retVal;
  }

  public int GetAverageGoodEvilAlignment() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetAverageGoodEvilAlignment(swigCPtr);
    return retVal;
  }

  public int GetAverageLawChaosAlignment() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetAverageLawChaosAlignment(swigCPtr);
    return retVal;
  }

  public int GetAverageLevel() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetAverageLevel(swigCPtr);
    return retVal;
  }

  public int GetAverageXP() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetAverageXP(swigCPtr);
    return retVal;
  }

  public int GetMostFrequentClass() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetMostFrequentClass(swigCPtr);
    return retVal;
  }

  public uint GetWorstAC(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetWorstAC__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetWorstAC(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetWorstAC__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public uint GetBestAC(uint oidReferenceFactionMember, int bMustBeVisible) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetBestAC__SWIG_0(swigCPtr, oidReferenceFactionMember, bMustBeVisible);
    return retVal;
  }

  public uint GetBestAC(uint oidReferenceFactionMember) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetBestAC__SWIG_1(swigCPtr, oidReferenceFactionMember);
    return retVal;
  }

  public int GetCreatureInParty(uint oidCreature) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetCreatureInParty(swigCPtr, oidCreature);
    return retVal;
  }

  public int GetSingletonParty() {
    int retVal = NWNXLibPINVOKE.CNWSFaction_GetSingletonParty(swigCPtr);
    return retVal;
  }

  public int TransferLeadership(uint oidNewLeader, uint oidOldLeader) {
    int retVal = NWNXLibPINVOKE.CNWSFaction_TransferLeadership(swigCPtr, oidNewLeader, oidOldLeader);
    return retVal;
  }

  public uint GetFactionMember(int nStartPos, int bPCOnly) {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetFactionMember(swigCPtr, nStartPos, bPCOnly);
    return retVal;
  }

  public void ClearAllReputationsTowards(uint oidCreature) {
    NWNXLibPINVOKE.CNWSFaction_ClearAllReputationsTowards(swigCPtr, oidCreature);
  }

  public uint GetLeader() {
    uint retVal = NWNXLibPINVOKE.CNWSFaction_GetLeader(swigCPtr);
    return retVal;
  }

  public CFactionManager GetFactionManager() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSFaction_GetFactionManager(swigCPtr);
    CFactionManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new CFactionManager(cPtr, false);
    return ret;
  }

  public void _Destructor() {
    NWNXLibPINVOKE.CNWSFaction__Destructor(swigCPtr);
  }

}

}
