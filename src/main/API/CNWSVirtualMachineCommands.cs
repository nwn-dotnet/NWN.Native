//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public unsafe class CNWSVirtualMachineCommands : CVirtualMachineCmdImplementer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CNWSVirtualMachineCommands(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NWNXLibPINVOKE.CNWSVirtualMachineCommands_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CNWSVirtualMachineCommands obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CNWSVirtualMachineCommands(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public global::System.IntPtr Pointer {
    get {
      return swigCPtr.Handle;
    }
  }

  public static unsafe implicit operator void*(CNWSVirtualMachineCommands self) {
    return (void*)self.swigCPtr.Handle;
  }

  public static unsafe CNWSVirtualMachineCommands FromPointer(void* pointer, bool memoryOwn = false) {
    return pointer != null ? new CNWSVirtualMachineCommands((global::System.IntPtr)pointer, memoryOwn) : null;
  }

  public static CNWSVirtualMachineCommands FromPointer(global::System.IntPtr pointer, bool memoryOwn = false) {
    return pointer != global::System.IntPtr.Zero ? new CNWSVirtualMachineCommands(pointer, memoryOwn) : null;
  }

  public bool Equals(CNWSVirtualMachineCommands other) {
    if (ReferenceEquals(null, other)) {
      return false;
    }

    if (ReferenceEquals(this, other)) {
      return true;
    }

    return Pointer.Equals(other.Pointer);
  }

  public override bool Equals(object obj) {
    return ReferenceEquals(this, obj) || obj is CNWSVirtualMachineCommands other && Equals(other);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public static bool operator ==(CNWSVirtualMachineCommands left, CNWSVirtualMachineCommands right) {
    return Equals(left, right);
  }

  public static bool operator !=(CNWSVirtualMachineCommands left, CNWSVirtualMachineCommands right) {
    return !Equals(left, right);
  }

  public SWIGTYPE_p_m_CNWSVirtualMachineCommands__f_int_int__int m_pVirtualMachineCommands {
    set {
      NWNXLibPINVOKE.CNWSVirtualMachineCommands_m_pVirtualMachineCommands_set(swigCPtr, SWIGTYPE_p_m_CNWSVirtualMachineCommands__f_int_int__int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSVirtualMachineCommands_m_pVirtualMachineCommands_get(swigCPtr);
      SWIGTYPE_p_m_CNWSVirtualMachineCommands__f_int_int__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_m_CNWSVirtualMachineCommands__f_int_int__int(cPtr, false);
      return ret;
    } 
  }

  public CNWSVirtualMachineCommands(CVirtualMachine vm) : this(NWNXLibPINVOKE.new_CNWSVirtualMachineCommands(CVirtualMachine.getCPtr(vm)), true) {
  }

  public override void InitializeCommands() {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_InitializeCommands(swigCPtr);
  }

  public override int ExecuteCommand(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommand(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public override void ReportError(CExoString sFileName, int nError, CExoString customMsg) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_ReportError__SWIG_0(swigCPtr, CExoString.getCPtr(sFileName), nError, CExoString.getCPtr(customMsg));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ReportError(CExoString sFileName, int nError) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_ReportError__SWIG_1(swigCPtr, CExoString.getCPtr(sFileName), nError);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void RunScriptCallback(CExoString sFileName, int nRecursionLevel) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_RunScriptCallback(swigCPtr, CExoString.getCPtr(sFileName), nRecursionLevel);
  }

  public override void RunScriptEndCallback(CExoString sFileName, int nRecursionLevel) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_RunScriptEndCallback(swigCPtr, CExoString.getCPtr(sFileName), nRecursionLevel);
  }

  public override void* CopyGameDefinedStructure(int nEngineStructure, void* pStructureSrc) {
    global::System.IntPtr retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_CopyGameDefinedStructure(swigCPtr, nEngineStructure, (global::System.IntPtr)pStructureSrc);
    return (void*)retVal;
  }

  public override int GetEqualGameDefinedStructure(int nEngineStructure, void* pStructure1, void* pStructure2) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetEqualGameDefinedStructure(swigCPtr, nEngineStructure, (global::System.IntPtr)pStructure1, (global::System.IntPtr)pStructure2);
    return retVal;
  }

  public override void DestroyGameDefinedStructure(int nEngineStructure, void* pStructureToDelete) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_DestroyGameDefinedStructure(swigCPtr, nEngineStructure, (global::System.IntPtr)pStructureToDelete);
  }

  public override void* CreateGameDefinedStructure(int nEngineStructure) {
    global::System.IntPtr retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_CreateGameDefinedStructure(swigCPtr, nEngineStructure);
    return (void*)retVal;
  }

  public override CExoString GetGameDefinedStructureName(int nEngineStructure) {
    CExoString ret = new CExoString(NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetGameDefinedStructureName(swigCPtr, nEngineStructure), true);
    return ret;
  }

  public override CExoString GetDebuggerLabelName(int nDebuggerLabel) {
    CExoString ret = new CExoString(NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetDebuggerLabelName(swigCPtr, nDebuggerLabel), true);
    return ret;
  }

  public override int SaveGameDefinedStructure(int nEngineStructure, void* pStructure, CResGFF pRes, CResStruct pStruct) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_SaveGameDefinedStructure(swigCPtr, nEngineStructure, (global::System.IntPtr)pStructure, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pStruct));
    return retVal;
  }

  public override int LoadGameDefinedStructure(int nEngineStructure, void** pStructure, CResGFF pRes, CResStruct pStruct) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_LoadGameDefinedStructure(swigCPtr, nEngineStructure, (global::System.IntPtr)pStructure, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pStruct));
    return retVal;
  }

  public override void GetEngineStructureWatchView(int nEngineStructure, void* pEngineStructure, int* nEntries, void** m_ppNames, void** m_ppValues) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetEngineStructureWatchView(swigCPtr, nEngineStructure, (global::System.IntPtr)pEngineStructure, nEntries, (global::System.IntPtr)m_ppNames, (global::System.IntPtr)m_ppValues);
  }

  public override void GetObjectWatchView(uint oidObject, int* nEntries, void** m_ppNames, void** m_ppValues) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetObjectWatchView(swigCPtr, oidObject, nEntries, (global::System.IntPtr)m_ppNames, (global::System.IntPtr)m_ppValues);
  }

  public override int DebugGUIStart() {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_DebugGUIStart(swigCPtr);
    return retVal;
  }

  public override void DebugGUIStop() {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_DebugGUIStop(swigCPtr);
  }

  public override void DebugGUISendMessageTo(byte* pMsg, int nSize) {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_DebugGUISendMessageTo(swigCPtr, pMsg, nSize);
  }

  public override int DebugGUIGetMessageFrom(byte** pMsg, int* nSize) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_DebugGUIGetMessageFrom(swigCPtr, (global::System.IntPtr)pMsg, nSize);
    return retVal;
  }

  public override void DebugGUIUpdate() {
    NWNXLibPINVOKE.CNWSVirtualMachineCommands_DebugGUIUpdate(swigCPtr);
  }

  public C2DA GetTableFromArmorPart(int iPart) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSVirtualMachineCommands_GetTableFromArmorPart(swigCPtr, iPart);
    C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
    return ret;
  }

  public int ExecuteCommandActionCounterSpell(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionCounterSpell(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionDoCommand(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionDoCommand(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionEquipMostDamagingMelee(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionEquipMostDamagingMelee(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionEquipMostDamagingRanged(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionEquipMostDamagingRanged(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionEquipMostEffectiveArmor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionEquipMostEffectiveArmor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionExamine(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionExamine(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionExchangeItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionExchangeItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionFollowObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionFollowObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionInteractObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionInteractObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionJumpToObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionJumpToObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionJumpToPoint(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionJumpToPoint(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionLockActions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionLockActions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionMoveAwayFromLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionMoveAwayFromLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionPauseConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionPauseConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionRandomWalk(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionRandomWalk(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionRest(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionRest(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionResumeConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionResumeConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionStartConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionStartConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionSit(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionSit(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionUseFeat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionUseFeat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionUseItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionUseItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionUseSkill(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionUseSkill(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActionUseTalent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActionUseTalent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandActivatePortal(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandActivatePortal(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAddItemProperty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAddItemProperty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAddJournalQuestEntry(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAddJournalQuestEntry(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAddToParty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAddToParty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAdjustAlignment(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAdjustAlignment(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAdjustReputation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAdjustReputation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAmbientSound(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAmbientSound(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandApplyEffectAtPoint(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandApplyEffectAtPoint(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandApplyEffectOnObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandApplyEffectOnObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAreaManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAreaManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAssignCommand(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAssignCommand(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAssociateAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAssociateAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAttachCamera(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAttachCamera(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAttack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAttack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAudioStreamManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAudioStreamManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandAutoMapExplorationManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandAutoMapExplorationManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandBeginConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandBeginConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandBlackScreen(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandBlackScreen(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandBootPC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandBootPC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCastSpell(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCastSpell(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandChangeFaction(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandChangeFaction(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandClearAllActions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandClearAllActions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandClearObjectVisualTransform(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandClearObjectVisualTransform(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetActionMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetActionMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetActionMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetActionMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCloseDoor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCloseDoor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCompileScript(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCompileScript(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCopyItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCopyItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCopyItemAndModify(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCopyItemAndModify(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemAppearance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemAppearance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCopyObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCopyObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCreateItemOnObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCreateItemOnObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCreateObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCreateObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCreateTrapAtLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCreateTrapAtLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandCreateTrapOnObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandCreateTrapOnObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDayNightCycle(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDayNightCycle(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDecrementFeatUses(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDecrementFeatUses(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDecrementSpellUses(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDecrementSpellUses(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDelayCommand(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDelayCommand(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDeleteVar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDeleteVar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDeleteCampaignVariable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDeleteCampaignVariable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDestroyCampaignDatabase(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDestroyCampaignDatabase(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDestroyObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDestroyObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPlayerDevice(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPlayerDevice(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDistanceConversions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDistanceConversions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDoDoorAction(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDoDoorAction(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDoSinglePlayerAutoSave(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDoSinglePlayerAutoSave(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDoTouchAttack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDoTouchAttack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandDoWhirlwindAttack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandDoWhirlwindAttack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectAbilityDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAbilityDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectAbilityIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAbilityIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectACDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectACDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectACIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectACIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectAppear(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAppear(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectAreaEffect(int nCommandId, int nParemeters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAreaEffect(swigCPtr, nCommandId, nParemeters);
    return retVal;
  }

  public int ExecuteCommandEffectAttackDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAttackDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectAttackIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectAttackIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectBeam(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectBeam(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectBlindness(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectBlindness(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectComplex(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectComplex(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectConcealment(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectConcealment(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectCutsceneGhost(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectCutsceneGhost(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageImmunityDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageImmunityDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageImmunityIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageImmunityIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageResistance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageResistance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageReduction(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageReduction(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDamageShield(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDamageShield(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDarkness(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDarkness(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDisease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDisease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDisappear(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDisappear(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectDisappearAppear(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectDisappearAppear(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectEthereal(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectEthereal(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectHeal(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectHeal(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectHitPointChangeWhenDying(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectHitPointChangeWhenDying(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectIcon(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectIcon(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectImmunity(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectImmunity(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectInvisibility(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectInvisibility(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectLinkEffects(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectLinkEffects(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectMissChance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectMissChance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectModifyAttacks(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectModifyAttacks(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectMovementSpeedDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectMovementSpeedDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectMovementSpeedIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectMovementSpeedIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectNegativeLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectNegativeLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectPetrify(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectPetrify(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectPoison(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectPoison(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectResurrection(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectResurrection(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectRunScript(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectRunScript(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSanctuary(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSanctuary(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSavingThrowDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSavingThrowDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSavingThrowIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSavingThrowIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSeeInvisible(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSeeInvisible(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSkillDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSkillDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSkillIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSkillIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSpellFailure(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSpellFailure(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSpellImmunity(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSpellImmunity(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSpellLevelAbsorption(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSpellLevelAbsorption(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSpellResistanceDecrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSpellResistanceDecrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSpellResistanceIncrease(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSpellResistanceIncrease(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSummonCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSummonCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectSwarm(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectSwarm(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectTemporaryHP(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectTemporaryHP(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectTrueSeeing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectTrueSeeing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectTurnResistance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectTurnResistance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectUltravision(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectUltravision(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEffectVisualEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEffectVisualEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEndGame(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEndGame(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEquipItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEquipItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEventActivateItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEventActivateItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEventConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEventConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEventUserDefined(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEventUserDefined(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEventScriptManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEventScriptManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandEventSpellCastAt(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandEventSpellCastAt(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandExecuteScript(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandExecuteScript(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandExecuteScriptChunk(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandExecuteScriptChunk(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandExploreAreaForPlayer(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandExploreAreaForPlayer(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandExportAllCharacters(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandExportAllCharacters(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandExportSingleCharacter(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandExportSingleCharacter(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandFloatingText(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandFloatingText(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandForceRest(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandForceRest(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGet2DA(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGet2DA(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAbilityScore(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAbilityScore(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAbilityModifier(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAbilityModifier(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAge(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAge(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAILevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAILevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAlignment(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAlignment(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAnimalCompanionCreatureType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAnimalCompanionCreatureType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAnimalCompanionName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAnimalCompanionName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAOEObjectCreator(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAOEObjectCreator(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAppearanceType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAppearanceType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetArcaneSpellFailure(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetArcaneSpellFailure(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetArea(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetArea(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAreaLightColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAreaLightColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAreaLightDirection(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAreaLightDirection(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAreaSize(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAreaSize(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAssociate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAssociate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAssociateType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAssociateType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAttackTarget(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAttackTarget(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAttemptedAttackTarget(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAttemptedAttackTarget(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetAttemptedSpellTarget(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetAttemptedSpellTarget(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetBaseAttackBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetBaseItemFitsInInventory(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetBaseItemFitsInInventory(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetBaseItemType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetBaseItemType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetBattleTrack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetBattleTrack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetBlockingDoor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetBlockingDoor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCalendarYear(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCalendarYear(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCalendarMonth(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCalendarMonth(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCalendarDay(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCalendarDay(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignFloat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignFloat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignInt(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignInt(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignJson(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignJson(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignVector(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignVector(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCampaignString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCampaignString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCasterLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCasterLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetChallengeRating(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetChallengeRating(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetClassInformation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetClassInformation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCommandable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCommandable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureBodyPart(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureBodyPart(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureHasTalent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureHasTalent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureTailType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureTailType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureTalent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureTalent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureSize(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureSize(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCreatureWingType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCreatureWingType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCurrentAction(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCurrentAction(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCurrentlyRunningEvent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCurrentlyRunningEvent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCutsceneCameraMoveRate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCutsceneCameraMoveRate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetCutsceneMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetCutsceneMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDamageDealtByType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDamageDealtByType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDayTrack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDayTrack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDeity(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDeity(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDescription(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDescription(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDialogSoundLength(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDialogSoundLength(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDistanceBetween(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDistanceBetween(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDistanceBetweenLocations(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDistanceBetweenLocations(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDistanceToObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDistanceToObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDomain(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDomain(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetDroppableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetDroppableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectCasterLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectCasterLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectCreator(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectCreator(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectDuration(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectDuration(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectDurationRemaining(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectDurationRemaining(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectDurationType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectDurationType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectLinkId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectLinkId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectParameter(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectParameter(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectSpellId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectSpellId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectSubType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectSubType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEffectType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEffectType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEmotions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEmotions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEncounterData(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEncounterData(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetEnteringObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetEnteringObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFacing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFacing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionEqual(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionEqual(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionAverageGoodEvilAlignment(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionAverageGoodEvilAlignment(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionAverageLawChaosAlignment(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionAverageLawChaosAlignment(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionAverageLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionAverageLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionAverageReputation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionAverageReputation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionAverageXP(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionAverageXP(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionBestAC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionBestAC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionGold(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionGold(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionLeastDamagedMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionLeastDamagedMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionLeader(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionLeader(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionMostDamagedMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionMostDamagedMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionMostFrequentClass(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionMostFrequentClass(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionNthNearestMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionNthNearestMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionStrongestMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionStrongestMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionWeakestMember(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionWeakestMember(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFactionWorstAC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFactionWorstAC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFamiliarCreatureType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFamiliarCreatureType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFamiliarName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFamiliarName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFeatRemainingUses(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFeatRemainingUses(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFogAmount(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFogAmount(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFogColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFogColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFootstepType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFootstepType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetFortitudeSavingThrow(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetFortitudeSavingThrow(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetGameDifficulty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetGameDifficulty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetGoingToBeAttackedBy(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetGoingToBeAttackedBy(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetGold(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetGold(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetGoldPieceValue(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetGoldPieceValue(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetGroundHeight(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetGroundHeight(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHardness(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHardness(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasFeat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasFeat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasFeatEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasFeatEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasInventory(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasInventory(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasSkill(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasSkill(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasSpell(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasSpell(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHasSpellEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHasSpellEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHenchman(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHenchman(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHiddenWhenEquipped(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHiddenWhenEquipped(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHitDice(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHitDice(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetHitpoints(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetHitpoints(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIdentified(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIdentified(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetImmortal(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetImmortal(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetInfiniteFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetInfiniteFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetInPersistentObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetInPersistentObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetInventoryDisturbItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetInventoryDisturbItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetInventoryDisturbType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetInventoryDisturbType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsAreaAboveGround(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsAreaAboveGround(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsAreaNatural(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsAreaNatural(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsAreaInterior(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsAreaInterior(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsCreatureDisarmable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsCreatureDisarmable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsDawn(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsDawn(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsDay(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsDay(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsDoorActionPossible(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsDoorActionPossible(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsDMPossessed(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsDMPossessed(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsDusk(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsDusk(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsEncounterCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsEncounterCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsImmune(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsImmune(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsInCombat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsInCombat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsInTrigger(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsInTrigger(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsNight(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsNight(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsOpen(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsOpen(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsSkillSuccessful(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsSkillSuccessful(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsPlayerDM(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsPlayerDM(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsRacialTypePlayable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsRacialTypePlayable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsReactionType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsReactionType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsResting(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsResting(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsTalentValid(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsTalentValid(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsTrapped(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsTrapped(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsWeaponEffective(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsWeaponEffective(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemACValue(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemACValue(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemCharges(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemCharges(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemCursedFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemCursedFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemHasItemProperty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemHasItemProperty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemInInventory(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemInInventory(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemInSlot(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemInSlot(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPossessedBy(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPossessedBy(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPossessor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPossessor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemProperty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemProperty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyDuration(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyDuration(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyDurationRemaining(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyDurationRemaining(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyDurationType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyDurationType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemPropertyUsesPerDayRemaining(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemPropertyUsesPerDayRemaining(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetItemStackSize(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetItemStackSize(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetJournalQuestExperience(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetJournalQuestExperience(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetKeyRequiredFeedbackMessage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetKeyRequiredFeedbackMessage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastAssociateCommand(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastAssociateCommand(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastAttacker(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastAttacker(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastAttackMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastAttackMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastAttackType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastAttackType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastDamager(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastDamager(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastDisarmed(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastDisarmed(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastDisturbed(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastDisturbed(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastHostileActor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastHostileActor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastEquipped(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastEquipped(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastEquippedSlot(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastEquippedSlot(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastKiller(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastKiller(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastLocked(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastLocked(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastOpenedBy(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastOpenedBy(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastClosedBy(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastClosedBy(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastPCRested(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastPCRested(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastPerceived(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastPerceived(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastPerception(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastPerception(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastRestEventType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastRestEventType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastSpeaker(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastSpeaker(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastSpellCastClass(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastSpellCastClass(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastSpellLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastSpellLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastTrapDetected(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastTrapDetected(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastUnlocked(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastUnlocked(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastUsedBy(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastUsedBy(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLastWeaponUsed(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLastWeaponUsed(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLeavingObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLeavingObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitAttackBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitAttackBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitDamageBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitDamageBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitSavingThrowBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitSavingThrowBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitAbilityBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitAbilityBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitAbilityPenalty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitAbilityPenalty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLimitSkillBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLimitSkillBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLocked(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLocked(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLockInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLockInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetLootable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetLootable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMaster(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMaster(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMatchedString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMatchedString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMatchedStringsCount(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMatchedStringsCount(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMatchedStringsNum(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMatchedStringsNum(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMaxHenchmen(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMaxHenchmen(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMetaMagicFeat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMetaMagicFeat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMicrosecondCounter(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMicrosecondCounter(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetModeState(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetModeState(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetModule(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetModule(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetModuleItemStuff(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetModuleItemStuff(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetModuleName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetModuleName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetMovementRate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetMovementRate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetNearestObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetNearestObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetNearestTrap(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetNearestTrap(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetNightTrack(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetNightTrack(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetNumStackedItems(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetNumStackedItems(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectByTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectByTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectInArea(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectInArea(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectInShape(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectInShape(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectValid(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectValid(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectVisibility(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectVisibility(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetObjectVisibleDistance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetObjectVisibleDistance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCChatMessage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCChatMessage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCChatSpeaker(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCChatSpeaker(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCChatVolume(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCChatVolume(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCIPAddress(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCIPAddress(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPlayerConnectionRelayed(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPlayerConnectionRelayed(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPlayerBuildInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPlayerBuildInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPlayerBuildInfoStr(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPlayerBuildInfoStr(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCLevellingUp(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCLevellingUp(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCPlayerName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCPlayerName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCPublicCDKey(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCPublicCDKey(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPCSpeaker(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPCSpeaker(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPhenoType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPhenoType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPickpocketableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPickpocketableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPlaceableIllumination(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPlaceableIllumination(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPlotFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPlotFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPortraitId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPortraitId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPortraitResRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPortraitResRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetPosition(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetPosition(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetRacialType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetRacialType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetRandomUUID(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetRandomUUID(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetReflexAdjustedDamage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetReflexAdjustedDamage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetReflexSavingThrow(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetReflexSavingThrow(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetReputation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetReputation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetResRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetResRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetScriptInstructionsRemaining(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetScriptInstructionsRemaining(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSittingCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSittingCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSkillRank(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSkillRank(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSkyBox(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSkyBox(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetScriptParam(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetScriptParam(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpecialization(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpecialization(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellCast(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellCast(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellCasterItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellCasterItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellCastSpontaneously(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellCastSpontaneously(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellFeatId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellFeatId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellLevelByClass(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellLevelByClass(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellResistance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellResistance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellSaveDC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellSaveDC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellTargetLoc(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellTargetLoc(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellTargetObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellTargetObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSpellUsesLeft(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSpellUsesLeft(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetStartingPackage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetStartingPackage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetStat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetStat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetStolenFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetStolenFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetStrByStrRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetStrByStrRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetStrRefSoundDuration(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetStrRefSoundDuration(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSubRace(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSubRace(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTileLightColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTileLightColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTimeHour(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTimeHour(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTimeMillisecond(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTimeMillisecond(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTimeMinute(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTimeMinute(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTimeSecond(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTimeSecond(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTotalDamageDealt(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTotalDamageDealt(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTrapInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTrapInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTurnResistanceHD(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTurnResistanceHD(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetUseableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetUseableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetUserDefinedEventNumber(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetUserDefinedEventNumber(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetVar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetVar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetWaypointByTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetWaypointByTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTickRate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTickRate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetTransitionTarget(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetTransitionTarget(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetSurfaceMaterial(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetSurfaceMaterial(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetWeaponRanged(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetWeaponRanged(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetWeather(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetWeather(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetWeight(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetWeight(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetWillSavingThrow(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetWillSavingThrow(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetXP(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetXP(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetXPScale(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetXPScale(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGiveGoldToCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGiveGoldToCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGiveXPToCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGiveXPToCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGetIsPossessedFamiliar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGetIsPossessedFamiliar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandGuiEventManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandGuiEventManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandHashString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandHashString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandHideEffectIcon(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandHideEffectIcon(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIgnoreEffectImmunity(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIgnoreEffectImmunity(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIncrementRemainingFeatUses(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIncrementRemainingFeatUses(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsAIState(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsAIState(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsDM(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsDM(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsEffectValid(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsEffectValid(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsInConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsInConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsItemPropertyValid(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsItemPropertyValid(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsListening(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsListening(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandIsPC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandIsPC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandItemActivated(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandItemActivated(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandItemPropertyEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandItemPropertyEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandJson(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandJson(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandKnownSpellManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandKnownSpellManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandLevelUpHenchman(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandLevelUpHenchman(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandLineOfSight(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandLineOfSight(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandLocationAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandLocationAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandLockCamera(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandLockCamera(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMaterialShaderUniforms(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMaterialShaderUniforms(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMemorizedSpellManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMemorizedSpellManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandModuleAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandModuleAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMoveAwayFromObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMoveAwayFromObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMoveToObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMoveToObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMoveToPoint(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMoveToPoint(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMusicBackground(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMusicBackground(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandMusicBattle(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandMusicBattle(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandNuiManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandNuiManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandNWNXFunctionManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandNWNXFunctionManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandObjectTextBubble(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandObjectTextBubble(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandObjectToString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandObjectToString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandObjectUiDiscoverMask(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandObjectUiDiscoverMask(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandObjectVisualTransform(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandObjectVisualTransform(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandOpenDoor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandOpenDoor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandOpenInventory(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandOpenInventory(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandOpenStore(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandOpenStore(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPauseState(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPauseState(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPersonalReputationAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPersonalReputationAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPickUpItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPickUpItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPlayAnimation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPlayAnimation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPlaySound(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPlaySound(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPlaySoundByStrRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPlaySoundByStrRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPopUpGUIPanel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPopUpGUIPanel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPostString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPostString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPrintLogEntry(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPrintLogEntry(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPrintVector(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPrintVector(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandPutDownItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandPutDownItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRandomName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRandomName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandReadySpellLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandReadySpellLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRecomputeStaticLighting(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRecomputeStaticLighting(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRegExp(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRegExp(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRegExpReplace(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRegExpReplace(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRemoveEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRemoveEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRemoveFromParty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRemoveFromParty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRemoveItemProperty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRemoveItemProperty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRemoveJournalQuestEntry(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRemoveJournalQuestEntry(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandReplaceObjectAnimation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandReplaceObjectAnimation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandReplaceObjectTexture(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandReplaceObjectTexture(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandResistSpell(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandResistSpell(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandResMan(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandResMan(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRestoreBaseAttackBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRestoreBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRestoreCameraFacing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRestoreCameraFacing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRetrieveCampaignObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRetrieveCampaignObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandRollDice(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandRollDice(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSavingThrow(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSavingThrow(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSendMessageToAllDMs(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSendMessageToAllDMs(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSendMessageToPC(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSendMessageToPC(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSendMessageToPCByStrRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSendMessageToPCByStrRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAILevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAILevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAreaLightColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAreaLightColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAreaLightDirection(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAreaLightDirection(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAreaTransitionBMP(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAreaTransitionBMP(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAreaWind(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAreaWind(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetAssociateListenPatterns(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetAssociateListenPatterns(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetBaseAttackBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCalendar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCalendar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCameraFlags(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCameraFlags(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCameraHeight(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCameraHeight(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCameraLimits(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCameraLimits(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCameraLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCameraLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCameraMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCameraMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignFloat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignFloat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignInt(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignInt(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignJson(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignJson(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignVector(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignVector(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignLocation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignLocation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCampaignString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCampaignString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCommandable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCommandable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCommandingPlayer(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCommandingPlayer(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCreatureAppearanceType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCreatureAppearanceType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCreatureBodyPart(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCreatureBodyPart(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCreatureTailType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCreatureTailType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCreatureWingType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCreatureWingType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCurrentHitPoints(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCurrentHitPoints(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCustomToken(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCustomToken(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCutsceneMode(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCutsceneMode(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetCutsceneCameraMoveRate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetCutsceneCameraMoveRate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetDeity(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetDeity(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetDescription(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetDescription(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetDislike(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetDislike(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetDroppableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetDroppableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetEffectIconFlashing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetEffectIconFlashing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetEffectProperties(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetEffectProperties(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetEncounterData(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetEncounterData(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetEnterTargetingModeData(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetEnterTargetingModeData(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetFacing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetFacing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetFade(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetFade(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetFogAmount(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetFogAmount(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetFogColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetFogColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetFootstepType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetFootstepType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetGender(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetGender(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetHardness(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetHardness(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetHiddenWhenEquipped(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetHiddenWhenEquipped(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetIdentified(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetIdentified(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetImmortal(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetImmortal(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetInfiniteFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetInfiniteFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetIsDestroyable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetIsDestroyable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetItemCharges(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetItemCharges(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetItemCursedFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetItemCursedFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetItemPropertyUsesPerDayRemaining(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetItemPropertyUsesPerDayRemaining(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetItemStackSize(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetItemStackSize(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetKeyRequiredFeedbackMessage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetKeyRequiredFeedbackMessage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLike(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLike(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitAttackBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitAttackBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitDamageBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitDamageBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitSavingThrowBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitSavingThrowBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitAbilityBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitAbilityBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitAbilityPenalty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitAbilityPenalty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLimitSkillBonus(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLimitSkillBonus(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetListening(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetListening(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetListenString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetListenString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLockInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLockInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLocked(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLocked(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetLootable(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetLootable(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetMapPinEnabled(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetMapPinEnabled(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetMaxHenchmen(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetMaxHenchmen(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetObjectHiliteColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetObjectHiliteColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetObjectMouseCursor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetObjectMouseCursor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetObjectVisibleDistance(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetObjectVisibleDistance(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPanelButtonFlash(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPanelButtonFlash(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPCChatMessage(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPCChatMessage(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPCChatVolume(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPCChatVolume(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPhenoType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPhenoType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPickpocketableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPickpocketableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPlaceableIllumination(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPlaceableIllumination(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPlotFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPlotFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPortraitId(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPortraitId(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetPortraitResRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetPortraitResRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetSavingThrow(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetSavingThrow(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetScriptParam(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetScriptParam(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetShaderUniformFloat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetShaderUniformFloat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetShaderUniformInt(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetShaderUniformInt(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetShaderUniformVec(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetShaderUniformVec(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetSkyBox(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetSkyBox(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetSpellTargetingData(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetSpellTargetingData(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetStolenFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetStolenFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetSubRace(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetSubRace(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetSubType(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetSubType(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTextureOverride(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTextureOverride(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTime(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTime(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTileLightColor(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTileLightColor(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTlkOverride(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTlkOverride(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTransitionTarget(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTransitionTarget(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetTrapInfo(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetTrapInfo(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetUseableFlag(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetUseableFlag(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetVar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetVar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetWeather(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetWeather(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetXP(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetXP(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSetXPScale(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSetXPScale(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSignalEvent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSignalEvent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSoundset(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSoundset(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSoundObjectPlay(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSoundObjectPlay(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSoundObjectSetPosition(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSoundObjectSetPosition(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSoundObjectSetVolume(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSoundObjectSetVolume(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSoundObjectStop(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSoundObjectStop(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSpawnScriptDebugger(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSpawnScriptDebugger(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSpeakOneLinerConversation(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSpeakOneLinerConversation(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSpeakString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSpeakString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSpeakStrRef(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSpeakStrRef(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSpellAbilityManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSpellAbilityManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlBind(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlBind(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlGet(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlGet(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlGetColumn(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlGetColumn(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlGetError(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlGetError(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlPrepare(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlPrepare(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlResetDatabase(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlResetDatabase(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlResetQuery(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlResetQuery(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSqlStep(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSqlStep(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStandardFactionReputationAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStandardFactionReputationAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStartNewModule(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStartNewModule(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStopFade(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStopFade(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStoreGet(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStoreGet(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStoreSet(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStoreSet(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStoreCameraFacing(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStoreCameraFacing(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStoreCampaignObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStoreCampaignObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStringConversions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStringConversions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandStringToObject(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandStringToObject(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSummonAssociate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSummonAssociate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandSurrenderToEnemies(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandSurrenderToEnemies(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTagEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTagEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTagItemProperty(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTagItemProperty(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTakeGoldFromCreature(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTakeGoldFromCreature(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTalent(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTalent(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTalentAccess(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTalentAccess(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTargetingModeManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTargetingModeManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTileActionManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTileActionManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTileExplorationManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTileExplorationManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTileManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTileManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTimeConversions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTimeConversions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandTestString(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandTestString(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandUUIDManagement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandUUIDManagement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandUnequipItem(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandUnequipItem(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandUnpossessFamiliar(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandUnpossessFamiliar(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMAbort(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMAbort(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMBacktrace(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMBacktrace(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMGetJmp(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMGetJmp(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMGetRecursionLevel(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMGetRecursionLevel(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMGetScriptChunk(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMGetScriptChunk(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMGetScriptName(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMGetScriptName(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMSetJmp(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMSetJmp(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVMLongJmp(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVMLongJmp(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVector(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVector(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVectorConversions(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVectorConversions(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVectorMagnitude(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVectorMagnitude(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVectorNormalize(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVectorNormalize(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVersusEffect(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVersusEffect(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVoiceChat(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVoiceChat(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandVibrate(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandVibrate(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandUnlockAchievement(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandUnlockAchievement(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

  public int ExecuteCommandWait(int nCommandId, int nParameters) {
    int retVal = NWNXLibPINVOKE.CNWSVirtualMachineCommands_ExecuteCommandWait(swigCPtr, nCommandId, nParameters);
    return retVal;
  }

}

}
