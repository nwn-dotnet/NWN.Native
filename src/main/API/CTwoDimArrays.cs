//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public unsafe class CTwoDimArrays : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CTwoDimArrays(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CTwoDimArrays obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CTwoDimArrays() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CTwoDimArrays(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public global::System.IntPtr Pointer {
    get {
      return swigCPtr.Handle;
    }
  }

  public static unsafe implicit operator void*(CTwoDimArrays self) {
    return (void*)self.swigCPtr.Handle;
  }

  public static unsafe CTwoDimArrays FromPointer(void* pointer, bool memoryOwn = false) {
    return pointer != null ? new CTwoDimArrays((global::System.IntPtr)pointer, memoryOwn) : null;
  }

  public static CTwoDimArrays FromPointer(global::System.IntPtr pointer, bool memoryOwn = false) {
    return pointer != global::System.IntPtr.Zero ? new CTwoDimArrays(pointer, memoryOwn) : null;
  }

  public bool Equals(CTwoDimArrays other) {
    if (ReferenceEquals(null, other)) {
      return false;
    }

    if (ReferenceEquals(this, other)) {
      return true;
    }

    return Pointer.Equals(other.Pointer);
  }

  public override bool Equals(object obj) {
    return ReferenceEquals(this, obj) || obj is CTwoDimArrays other && Equals(other);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public static bool operator ==(CTwoDimArrays left, CTwoDimArrays right) {
    return Equals(left, right);
  }

  public static bool operator !=(CTwoDimArrays left, CTwoDimArrays right) {
    return !Equals(left, right);
  }

  public void** m_paIPRPCostTables {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_paIPRPCostTables_set(swigCPtr, (global::System.IntPtr)value);
    } 
    get {
        global::System.IntPtr retVal = NWNXLibPINVOKE.CTwoDimArrays_m_paIPRPCostTables_get(swigCPtr);
        return (void**)retVal;
    }

  }

  public byte m_nNumIPRPCostTables {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_nNumIPRPCostTables_set(swigCPtr, value);
    } 
    get {
      byte retVal = NWNXLibPINVOKE.CTwoDimArrays_m_nNumIPRPCostTables_get(swigCPtr);
      return retVal;
    }

  }

  public NativeArray<byte> m_lstEpicBaseAttackBonus {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicBaseAttackBonus_set(swigCPtr, value);
    } 
    get {
      global::System.IntPtr arrayPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicBaseAttackBonus_get(swigCPtr);
      NativeArray<byte> retVal = new NativeArray<byte>(arrayPtr, 60);

      return retVal; // byte[60]
    }

  }

  public NativeArray<byte> m_lstEpicFortificationSaveThrowBonus {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicFortificationSaveThrowBonus_set(swigCPtr, value);
    } 
    get {
      global::System.IntPtr arrayPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicFortificationSaveThrowBonus_get(swigCPtr);
      NativeArray<byte> retVal = new NativeArray<byte>(arrayPtr, 60);

      return retVal; // byte[60]
    }

  }

  public NativeArray<byte> m_lstEpicWillSaveThrowBonus {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicWillSaveThrowBonus_set(swigCPtr, value);
    } 
    get {
      global::System.IntPtr arrayPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicWillSaveThrowBonus_get(swigCPtr);
      NativeArray<byte> retVal = new NativeArray<byte>(arrayPtr, 60);

      return retVal; // byte[60]
    }

  }

  public NativeArray<byte> m_lstEpicReflexSaveThrowBonus {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicReflexSaveThrowBonus_set(swigCPtr, value);
    } 
    get {
      global::System.IntPtr arrayPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstEpicReflexSaveThrowBonus_get(swigCPtr);
      NativeArray<byte> retVal = new NativeArray<byte>(arrayPtr, 60);

      return retVal; // byte[60]
    }

  }

  public C2DA m_pAppearanceTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAppearanceTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAppearanceTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pGenderTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pGenderTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pGenderTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pSurfaceMaterialTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pSurfaceMaterialTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pSurfaceMaterialTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAreaTransitionTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAreaTransitionTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAreaTransitionTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPersistentVisualEffectTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPersistentVisualEffectTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPersistentVisualEffectTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pCreatureSpeedTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pCreatureSpeedTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pCreatureSpeedTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDoorTypesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDoorTypesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDoorTypesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pGenericDoorsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pGenericDoorsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pGenericDoorsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPlaceablesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPlaceablesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPlaceablesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPSpells {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPSpells_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPSpells_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPLightTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPLightTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPLightTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPColor {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPColor_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPColor_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPMelee {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPMelee_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPMelee_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pItemPropDefTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pItemPropDefTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pItemPropDefTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pItemPropsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pItemPropsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pItemPropsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pCreatureSizeTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pCreatureSizeTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pCreatureSizeTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pArmorTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pArmorTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pArmorTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPortraitTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPortraitTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPortraitTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pArmorTypesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pArmorTypesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pArmorTypesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pTileColorTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pTileColorTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pTileColorTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pLightColorTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pLightColorTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pLightColorTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pReplaceTextureTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pReplaceTextureTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pReplaceTextureTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pTailModelTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pTailModelTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pTailModelTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pWingModelTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pWingModelTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pWingModelTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pCloakModelTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pCloakModelTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pCloakModelTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pCursorTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pCursorTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pCursorTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pActionsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pActionsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pActionsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAmbientMusicTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAmbientMusicTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAmbientMusicTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAmbientSoundTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAmbientSoundTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAmbientSoundTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pFootstepSoundsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pFootstepSoundsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pFootstepSoundsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAppearanceSoundsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAppearanceSoundsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAppearanceSoundsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pWeaponSoundsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pWeaponSoundsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pWeaponSoundsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDefaultACSoundsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDefaultACSoundsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDefaultACSoundsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAmmunitionTypesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAmmunitionTypesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAmmunitionTypesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pKeymapTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pKeymapTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pKeymapTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPlaceableSoundsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPlaceableSoundsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPlaceableSoundsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDamageLevelTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDamageLevelTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDamageLevelTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pEffectIconsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pEffectIconsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pEffectIconsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pLoadHintsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pLoadHintsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pLoadHintsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pSwearFilterTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pSwearFilterTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pSwearFilterTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPhenoTypeTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPhenoTypeTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPhenoTypeTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPVisualFxTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPVisualFxTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPVisualFxTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pWeatherTypesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pWeatherTypesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pWeatherTypesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pProgFxTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pProgFxTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pProgFxTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pStateScriptsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pStateScriptsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pStateScriptsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pVisualEffectTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pVisualEffectTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pVisualEffectTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pTrapTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pTrapTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pTrapTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pSpellSchoolTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pSpellSchoolTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pSpellSchoolTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPoisonTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPoisonTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPoisonTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDiseaseTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDiseaseTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDiseaseTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pRepAdjustmentsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pRepAdjustmentsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pRepAdjustmentsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pFractionalCRTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pFractionalCRTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pFractionalCRTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pCategoryTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pCategoryTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pCategoryTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pExcitedDurationTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pExcitedDurationTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pExcitedDurationTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pRestDurationTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pRestDurationTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pRestDurationTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pEncounterDifficultyTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pEncounterDifficultyTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pEncounterDifficultyTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPMonsterDamageTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPMonsterDamageTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPMonsterDamageTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAssociatesAnimalCompanionTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAssociatesAnimalCompanionTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAssociatesAnimalCompanionTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pAssociatesFamiliarTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pAssociatesFamiliarTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pAssociatesFamiliarTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPDamageTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPDamageTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPDamageTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pSkillVsItemCostTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pSkillVsItemCostTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pSkillVsItemCostTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPBonusCostTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPBonusCostTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPBonusCostTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPSRCostTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPSRCostTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPSRCostTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPNeg5CostTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPNeg5CostTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPNeg5CostTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPArcSpell {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPArcSpell_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPArcSpell_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pEncumbranceTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pEncumbranceTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pEncumbranceTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsBelt {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsBelt_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsBelt_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsBicep {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsBicep_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsBicep_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsChest {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsChest_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsChest_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsFoot {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsFoot_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsFoot_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsForearm {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsForearm_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsForearm_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsHand {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsHand_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsHand_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsLegs {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsLegs_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsLegs_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsNeck {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsNeck_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsNeck_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsPelvis {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsPelvis_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsPelvis_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsShin {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsShin_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsShin_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsShoulder {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsShoulder_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsShoulder_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPartsRobe {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPartsRobe_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPartsRobe_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pItemValue {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pItemValue_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pItemValue_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPackages {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPackages_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPackages_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pRuleset {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pRuleset_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pRuleset_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDamageTypes {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDamageTypes_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDamageTypes_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDamageTypeGroups {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDamageTypeGroups_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDamageTypeGroups_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pXpBase {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pXpBase_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pXpBase_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pRangesTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pRangesTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pRangesTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pPolymorphTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pPolymorphTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pPolymorphTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pOnHitTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pOnHitSpellTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitSpellTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitSpellTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pOnHitDurationTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitDurationTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pOnHitDurationTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pDamageHitVisualTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pDamageHitVisualTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pDamageHitVisualTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPACModTypeTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPACModTypeTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPACModTypeTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPWeightIncTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPWeightIncTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPWeightIncTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pBodyBagTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pBodyBagTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pBodyBagTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public C2DA m_pIPRPFeatsTable {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPFeatsTable_set(swigCPtr, C2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_pIPRPFeatsTable_get(swigCPtr);
      C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
      return ret;
    } 
  }

  public CExoLinkedListC2DA m_lstCached2DAs {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstCached2DAs_set(swigCPtr, CExoLinkedListC2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstCached2DAs_get(swigCPtr);
      CExoLinkedListC2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoLinkedListC2DA(cPtr, false);
      return ret;
    } 
  }

  public byte m_n2daCacheSize {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_n2daCacheSize_set(swigCPtr, value);
    } 
    get {
      byte retVal = NWNXLibPINVOKE.CTwoDimArrays_m_n2daCacheSize_get(swigCPtr);
      return retVal;
    }

  }

  public CExoLinkedListC2DA m_lstUserCached2DAs {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_lstUserCached2DAs_set(swigCPtr, CExoLinkedListC2DA.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_m_lstUserCached2DAs_get(swigCPtr);
      CExoLinkedListC2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoLinkedListC2DA(cPtr, false);
      return ret;
    } 
  }

  public byte m_nUser2daCacheSize {
    set {
      NWNXLibPINVOKE.CTwoDimArrays_m_nUser2daCacheSize_set(swigCPtr, value);
    } 
    get {
      byte retVal = NWNXLibPINVOKE.CTwoDimArrays_m_nUser2daCacheSize_get(swigCPtr);
      return retVal;
    }

  }

  public byte GetEpicFortSaveBonus(byte nLevel) {
    byte retVal = NWNXLibPINVOKE.CTwoDimArrays_GetEpicFortSaveBonus(swigCPtr, nLevel);
    return retVal;
  }

  public byte GetEpicRefSaveBonus(byte nLevel) {
    byte retVal = NWNXLibPINVOKE.CTwoDimArrays_GetEpicRefSaveBonus(swigCPtr, nLevel);
    return retVal;
  }

  public byte GetEpicWillSaveBonus(byte nLevel) {
    byte retVal = NWNXLibPINVOKE.CTwoDimArrays_GetEpicWillSaveBonus(swigCPtr, nLevel);
    return retVal;
  }

  public byte GetEpicAttackBonus(byte nLevel) {
    byte retVal = NWNXLibPINVOKE.CTwoDimArrays_GetEpicAttackBonus(swigCPtr, nLevel);
    return retVal;
  }

  public CTwoDimArrays() : this(NWNXLibPINVOKE.new_CTwoDimArrays(), true) {
  }

  public int Load2DArrays() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_Load2DArrays(swigCPtr);
    return retVal;
  }

  public int UnLoad2DArrays() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_UnLoad2DArrays(swigCPtr);
    return retVal;
  }

  public C2DA GetCached2DA(CExoString s2DAName, int bUpdateUser2daCache) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_GetCached2DA__SWIG_0(swigCPtr, CExoString.getCPtr(s2DAName), bUpdateUser2daCache);
    C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public C2DA GetCached2DA(CExoString s2DAName) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_GetCached2DA__SWIG_1(swigCPtr, CExoString.getCPtr(s2DAName));
    C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ClearCached2DAs() {
    NWNXLibPINVOKE.CTwoDimArrays_ClearCached2DAs(swigCPtr);
  }

  public C2DA GetIPRPCostTable(byte nCostTable) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CTwoDimArrays_GetIPRPCostTable(swigCPtr, nCostTable);
    C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
    return ret;
  }

  public int LoadIPRPCostTables() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_LoadIPRPCostTables(swigCPtr);
    return retVal;
  }

  public int UnLoadIPRPCostTables() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_UnLoadIPRPCostTables(swigCPtr);
    return retVal;
  }

  public int LoadEpicSaves() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_LoadEpicSaves(swigCPtr);
    return retVal;
  }

  public int LoadEpicAttacks() {
    int retVal = NWNXLibPINVOKE.CTwoDimArrays_LoadEpicAttacks(swigCPtr);
    return retVal;
  }

  public void Update2DACache(CExoLinkedListC2DA lstCached2DAs, int nMaxCacheSize, C2DA p2DA) {
    NWNXLibPINVOKE.CTwoDimArrays_Update2DACache(swigCPtr, CExoLinkedListC2DA.getCPtr(lstCached2DAs), nMaxCacheSize, C2DA.getCPtr(p2DA));
  }

  public void _Destructor() {
    NWNXLibPINVOKE.CTwoDimArrays__Destructor(swigCPtr);
  }

}

}
